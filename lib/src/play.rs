use serde::{Deserialize, Serialize};
use std::fs::File;
use std::path::Path;

#[derive(Debug, Serialize, Deserialize)]
pub struct Play {
    pub play_id: f64,
    pub game_id: String,
    pub old_game_id: String,
    pub home_team: String,
    pub away_team: String,
    pub season_type: String,
    pub week: i32,
    pub posteam: Option<String>,
    pub posteam_type: Option<String>,
    pub defteam: Option<String>,
    pub side_of_field: Option<String>,
    pub yardline_100: Option<i32>,
    pub game_date: String,
    pub quarter_seconds_remaining: f64,
    pub half_seconds_remaining: f64,
    pub game_seconds_remaining: f64,
    pub game_half: String,
    pub quarter_end: f64,
    pub drive: Option<i32>,
    pub sp: f64,
    pub qtr: f64,
    pub down: Option<i32>,
    pub goal_to_go: i32,
    pub time: String,
    pub yrdln: String,
    pub ydstogo: f64,
    pub ydsnet: Option<f64>,
    pub desc: String,
    pub play_type: Option<String>,
    pub yards_gained: Option<i32>,
    pub shotgun: f64,
    pub no_huddle: f64,
    pub qb_dropback: Option<f64>,
    pub qb_kneel: f64,
    pub qb_spike: f64,
    pub qb_scramble: f64,
    pub pass_length: Option<String>,
    pub pass_location: Option<String>,
    pub air_yards: Option<f64>,
    pub yards_after_catch: Option<f64>,
    pub run_location: Option<String>,
    pub run_gap: Option<String>,
    pub field_goal_result: Option<String>,
    pub kick_distance: Option<f64>,
    pub extra_point_result: Option<String>,
    pub two_point_conv_result: Option<String>,
    pub home_timeouts_remaining: f64,
    pub away_timeouts_remaining: f64,
    pub timeout: Option<String>,
    pub timeout_team: Option<String>,
    pub td_team: Option<String>,
    pub td_player_name: Option<String>,
    pub td_player_id: Option<String>,
    pub posteam_timeouts_remaining: Option<f64>,
    pub defteam_timeouts_remaining: Option<f64>,
    pub total_home_score: f64,
    pub total_away_score: f64,
    pub posteam_score: Option<f64>,
    pub defteam_score: Option<f64>,
    pub score_differential: Option<f64>,
    pub posteam_score_post: Option<f64>,
    pub defteam_score_post: Option<f64>,
    pub score_differential_post: Option<f64>,
    pub no_score_prob: f64,
    pub opp_fg_prob: f64,
    pub opp_safety_prob: f64,
    pub opp_td_prob: f64,
    pub fg_prob: f64,
    pub safety_prob: f64,
    pub td_prob: f64,
    pub extra_point_prob: f64,
    pub two_point_conversion_prob: f64,
    pub ep: f64,
    pub epa: f64,
    pub total_home_epa: f64,
    pub total_away_epa: f64,
    pub total_home_rush_epa: f64,
    pub total_away_rush_epa: f64,
    pub total_home_pass_epa: f64,
    pub total_away_pass_epa: f64,
    pub air_epa: Option<f64>,
    pub yac_epa: Option<f64>,
    pub comp_air_epa: Option<f64>,
    pub comp_yac_epa: Option<f64>,
    pub total_home_comp_air_epa: f64,
    pub total_away_comp_air_epa: f64,
    pub total_home_comp_yac_epa: f64,
    pub total_away_comp_yac_epa: f64,
    pub total_home_raw_air_epa: f64,
    pub total_away_raw_air_epa: f64,
    pub total_home_raw_yac_epa: f64,
    pub total_away_raw_yac_epa: f64,
    pub wp: f64,
    pub def_wp: f64,
    pub home_wp: f64,
    pub away_wp: f64,
    pub wpa: f64,
    pub vegas_wpa: f64,
    pub vegas_home_wpa: f64,
    pub home_wp_post: Option<f64>,
    pub away_wp_post: Option<f64>,
    pub vegas_wp: f64,
    pub vegas_home_wp: f64,
    pub total_home_rush_wpa: f64,
    pub total_away_rush_wpa: f64,
    pub total_home_pass_wpa: f64,
    pub total_away_pass_wpa: f64,
    pub air_wpa: Option<f64>,
    pub yac_wpa: Option<f64>,
    pub comp_air_wpa: Option<f64>,
    pub comp_yac_wpa: Option<f64>,
    pub total_home_comp_air_wpa: f64,
    pub total_away_comp_air_wpa: f64,
    pub total_home_comp_yac_wpa: f64,
    pub total_away_comp_yac_wpa: f64,
    pub total_home_raw_air_wpa: f64,
    pub total_away_raw_air_wpa: f64,
    pub total_home_raw_yac_wpa: f64,
    pub total_away_raw_yac_wpa: f64,
    pub punt_blocked: Option<f64>,
    pub first_down_rush: Option<f64>,
    pub first_down_pass: Option<f64>,
    pub first_down_penalty: Option<f64>,
    pub third_down_converted: Option<f64>,
    pub third_down_failed: Option<f64>,
    pub fourth_down_converted: Option<f64>,
    pub fourth_down_failed: Option<f64>,
    pub incomplete_pass: Option<f64>,
    pub touchback: f64,
    pub interception: Option<f64>,
    pub punt_inside_twenty: Option<f64>,
    pub punt_in_endzone: Option<f64>,
    pub punt_out_of_bounds: Option<f64>,
    pub punt_downed: Option<f64>,
    pub punt_fair_catch: Option<f64>,
    pub kickoff_inside_twenty: Option<f64>,
    pub kickoff_in_endzone: Option<f64>,
    pub kickoff_out_of_bounds: Option<f64>,
    pub kickoff_downed: Option<f64>,
    pub kickoff_fair_catch: Option<f64>,
    pub fumble_forced: Option<f64>,
    pub fumble_not_forced: Option<f64>,
    pub fumble_out_of_bounds: Option<f64>,
    pub solo_tackle: Option<f64>,
    pub safety: Option<f64>,
    pub penalty: Option<f64>,
    pub tackled_for_loss: Option<f64>,
    pub fumble_lost: Option<f64>,
    pub own_kickoff_recovery: Option<f64>,
    pub own_kickoff_recovery_td: Option<f64>,
    pub qb_hit: Option<f64>,
    pub rush_attempt: Option<f64>,
    pub pass_attempt: Option<f64>,
    pub sack: Option<f64>,
    pub touchdown: Option<f64>,
    pub pass_touchdown: Option<f64>,
    pub rush_touchdown: Option<f64>,
    pub return_touchdown: Option<f64>,
    pub extra_point_attempt: Option<f64>,
    pub two_point_attempt: Option<f64>,
    pub field_goal_attempt: Option<f64>,
    pub kickoff_attempt: Option<f64>,
    pub punt_attempt: Option<f64>,
    pub fumble: Option<f64>,
    pub complete_pass: Option<f64>,
    pub assist_tackle: Option<f64>,
    pub lateral_reception: Option<f64>,
    pub lateral_rush: Option<f64>,
    pub lateral_return: Option<f64>,
    pub lateral_recovery: Option<f64>,
    pub passer_player_id: Option<String>,
    pub passer_player_name: Option<String>,
    pub passing_yards: Option<f64>,
    pub receiver_player_id: Option<String>,
    pub receiver_player_name: Option<String>,
    pub receiving_yards: Option<f64>,
    pub rusher_player_id: Option<String>,
    pub rusher_player_name: Option<String>,
    pub rushing_yards: Option<f64>,
    pub lateral_receiver_player_id: Option<String>,
    pub lateral_receiver_player_name: Option<String>,
    pub lateral_receiving_yards: Option<f64>,
    pub lateral_rusher_player_id: Option<String>,
    pub lateral_rusher_player_name: Option<String>,
    pub lateral_rushing_yards: Option<f64>,
    pub lateral_sack_player_id: Option<String>,
    pub lateral_sack_player_name: Option<String>,
    pub interception_player_id: Option<String>,
    pub interception_player_name: Option<String>,
    pub lateral_interception_player_id: Option<String>,
    pub lateral_interception_player_name: Option<String>,
    pub punt_returner_player_id: Option<String>,
    pub punt_returner_player_name: Option<String>,
    pub lateral_punt_returner_player_id: Option<String>,
    pub lateral_punt_returner_player_name: Option<String>,
    pub kickoff_returner_player_name: Option<String>,
    pub kickoff_returner_player_id: Option<String>,
    pub lateral_kickoff_returner_player_id: Option<String>,
    pub lateral_kickoff_returner_player_name: Option<String>,
    pub punter_player_id: Option<String>,
    pub punter_player_name: Option<String>,
    pub kicker_player_name: Option<String>,
    pub kicker_player_id: Option<String>,
    pub own_kickoff_recovery_player_id: Option<String>,
    pub own_kickoff_recovery_player_name: Option<String>,
    pub blocked_player_id: Option<String>,
    pub blocked_player_name: Option<String>,
    pub tackle_for_loss_1_player_id: Option<String>,
    pub tackle_for_loss_1_player_name: Option<String>,
    pub tackle_for_loss_2_player_id: Option<String>,
    pub tackle_for_loss_2_player_name: Option<String>,
    pub qb_hit_1_player_id: Option<String>,
    pub qb_hit_1_player_name: Option<String>,
    pub qb_hit_2_player_id: Option<String>,
    pub qb_hit_2_player_name: Option<String>,
    pub forced_fumble_player_1_team: Option<String>,
    pub forced_fumble_player_1_player_id: Option<String>,
    pub forced_fumble_player_1_player_name: Option<String>,
    pub forced_fumble_player_2_team: Option<String>,
    pub forced_fumble_player_2_player_id: Option<String>,
    pub forced_fumble_player_2_player_name: Option<String>,
    pub solo_tackle_1_team: Option<String>,
    pub solo_tackle_2_team: Option<String>,
    pub solo_tackle_1_player_id: Option<String>,
    pub solo_tackle_2_player_id: Option<String>,
    pub solo_tackle_1_player_name: Option<String>,
    pub solo_tackle_2_player_name: Option<String>,
    pub assist_tackle_1_player_id: Option<String>,
    pub assist_tackle_1_player_name: Option<String>,
    pub assist_tackle_1_team: Option<String>,
    pub assist_tackle_2_player_id: Option<String>,
    pub assist_tackle_2_player_name: Option<String>,
    pub assist_tackle_2_team: Option<String>,
    pub assist_tackle_3_player_id: Option<String>,
    pub assist_tackle_3_player_name: Option<String>,
    pub assist_tackle_3_team: Option<String>,
    pub assist_tackle_4_player_id: Option<String>,
    pub assist_tackle_4_player_name: Option<String>,
    pub assist_tackle_4_team: Option<String>,
    pub tackle_with_assist: Option<String>,
    pub tackle_with_assist_1_player_id: Option<String>,
    pub tackle_with_assist_1_player_name: Option<String>,
    pub tackle_with_assist_1_team: Option<String>,
    pub tackle_with_assist_2_player_id: Option<String>,
    pub tackle_with_assist_2_player_name: Option<String>,
    pub tackle_with_assist_2_team: Option<String>,
    pub pass_defense_1_player_id: Option<String>,
    pub pass_defense_1_player_name: Option<String>,
    pub pass_defense_2_player_id: Option<String>,
    pub pass_defense_2_player_name: Option<String>,
    pub fumbled_1_team: Option<String>,
    pub fumbled_1_player_id: Option<String>,
    pub fumbled_1_player_name: Option<String>,
    pub fumbled_2_player_id: Option<String>,
    pub fumbled_2_player_name: Option<String>,
    pub fumbled_2_team: Option<String>,
    pub fumble_recovery_1_team: Option<String>,
    pub fumble_recovery_1_yards: Option<f64>,
    pub fumble_recovery_1_player_id: Option<String>,
    pub fumble_recovery_1_player_name: Option<String>,
    pub fumble_recovery_2_team: Option<String>,
    pub fumble_recovery_2_yards: Option<f64>,
    pub fumble_recovery_2_player_id: Option<String>,
    pub fumble_recovery_2_player_name: Option<String>,
    pub sack_player_id: Option<String>,
    pub sack_player_name: Option<String>,
    pub half_sack_1_player_id: Option<String>,
    pub half_sack_1_player_name: Option<String>,
    pub half_sack_2_player_id: Option<String>,
    pub half_sack_2_player_name: Option<String>,
    pub return_team: Option<String>,
    pub return_yards: Option<f64>,
    pub penalty_team: Option<String>,
    pub penalty_player_id: Option<String>,
    pub penalty_player_name: Option<String>,
    pub penalty_yards: Option<f64>,
    pub replay_or_challenge: f64,
    pub replay_or_challenge_result: Option<String>,
    pub penalty_type: Option<String>,
    pub defensive_two_point_attempt: Option<String>,
    pub defensive_two_point_conv: Option<String>,
    pub defensive_extra_point_attempt: Option<String>,
    pub defensive_extra_point_conv: Option<String>,
    pub safety_player_name: Option<String>,
    pub safety_player_id: Option<String>,
    pub season: i32,
    pub cp: Option<f64>,
    pub cpoe: Option<f64>,
    pub series: f64,
    pub series_success: f64,
    pub series_result: String,
    pub order_sequence: f64,
    pub start_time: String,
    pub time_of_day: Option<String>,
    pub stadium: String,
    pub weather: String,
    pub nfl_api_id: String,
    pub play_clock: String,
    pub play_deleted: f64,
    pub play_type_nfl: String,
    pub special_teams_play: f64,
    pub st_play_type: Option<String>,
    pub end_clock_time: Option<String>,
    pub end_yard_line: Option<String>,
    pub fixed_drive: f64,
    pub fixed_drive_result: String,
    pub drive_real_start_time: Option<String>,
    pub drive_play_count: Option<f64>,
    pub drive_time_of_possession: Option<f64>,
    pub drive_first_downs: Option<f64>,
    pub drive_inside20: Option<f64>,
    pub drive_ended_with_score: Option<f64>,
    pub drive_quarter_start: Option<String>,
    pub drive_quarter_end: Option<String>,
    pub drive_yards_penalized: Option<f64>,
    pub drive_start_transition: Option<String>,
    pub drive_end_transition: Option<String>,
    pub drive_game_clock_start: Option<String>,
    pub drive_game_clock_end: Option<String>,
    pub drive_start_yard_line: Option<String>,
    pub drive_end_yard_line: Option<String>,
    pub drive_play_id_started: Option<String>,
    pub drive_play_id_ended: Option<String>,
    pub away_score: f64,
    pub home_score: f64,
    pub location: String,
    pub result: f64,
    pub total: f64,
    pub spread_line: f64,
    pub total_line: f64,
    pub div_game: f64,
    pub roof: String,
    pub surface: String,
    pub temp: Option<f64>,
    pub wind: Option<f64>,
    pub home_coach: String,
    pub away_coach: String,
    pub stadium_id: String,
    pub game_stadium: String,
    pub aborted_play: f64,
    pub success: f64,
    pub passer: Option<String>,
    pub passer_jersey_number: Option<String>,
    pub rusher: Option<String>,
    pub rusher_jersey_number: Option<String>,
    pub receiver: Option<String>,
    pub receiver_jersey_number: Option<String>,
    pub pass: f64,
    pub rush: f64,
    pub first_down: Option<String>,
    pub special: f64,
    pub play: f64,
    pub passer_id: Option<String>,
    pub rusher_id: Option<String>,
    pub receiver_id: Option<String>,
    pub name: Option<String>,
    pub jersey_number: Option<String>,
    pub id: Option<String>,
    pub fantasy_player_name: Option<String>,
    pub fantasy_player_id: Option<String>,
    pub fantasy: Option<String>,
    pub fantasy_id: Option<String>,
    pub out_of_bounds: f64,
    pub home_opening_kickoff: f64,
    pub qb_epa: f64,
    pub xyac_epa: Option<f64>,
    pub xyac_mean_yardage: Option<f64>,
    pub xyac_median_yardage: Option<f64>,
    pub xyac_success: Option<f64>,
    pub xyac_fd: Option<f64>,
    pub xpass: Option<f64>,
    pub pass_oe: Option<f64>,
}

fn load_play_by_play_data<P: AsRef<Path>>(
    path: P,
) -> Result<Vec<PlayByPlay>, Box<dyn std::error::Error>> {
    let file = File::open(path)?;
    let reader = SerializedFileReader::new(file)?;
    let iter = reader.get_row_iter(None)?;

    let mut plays = Vec::new();
    for record in iter {
        let play: PlayByPlay = serde_parquet::from_row(record)?;
        plays.push(play);
    }

    Ok(plays)
}
